package Classes {			import flash.display.Sprite;    	import flash.events.Event;		import flash.net.URLLoader;		import flash.net.URLRequest;		import flash.net.URLRequestMethod;	    	import fl.controls.RadioButton;    	import fl.controls.RadioButtonGroup;		import flash.events.MouseEvent;			import Classes.Utilities.*;					import flash.display.MovieClip;		import flash.text.TextField;    	import flash.text.TextFieldAutoSize;       public class QuizQuestions extends Sprite {       		//set vars that call quizQuestion php		public var loader:URLLoader = new URLLoader();		public var url:URLRequest = new URLRequest("quizQuestion.php");							//define xmlLists we are calling from the db		public var questionTitleList:XMLList;		public var questionList:XMLList;		public var answerList:XMLList;		public var pointList:XMLList;		public var questionAndAnswerList:XMLList;				//set columns to one for answer display		public var cols: int = 1;				//define vars for points and score to hold this info		public var points:int;		public var score:int = 0;               public function QuizQuestions() {            			loader.addEventListener(Event.COMPLETE, loaded);			loader.load(url);						//add event listener for info dispatched from answers class			this.addEventListener("answerMsg", answerMsgHeard);						//listener for the startquiz btn that appears when a user first navigates to this page			startQuiz_btn.addEventListener(MouseEvent.CLICK, startQuiz);			//set buttonmode to true so user knows this is selectable			startQuiz_btn.buttonMode = true;			startQuiz_btn.mouseChildren = false;						//set invisible button elements to false. the visibility of these is what our quiz will use to move to the next question after an answer for the previous is selected			nextQuestion_btn.visible = false;          	nextQuestion2_btn.visible = false;			nextQuestion3_btn.visible = false;			nextQuestion4_btn.visible = false;			nextQuestion5_btn.visible = false;						//set results page stuff visibility to false while user is taking the quiz 			score_txt.visible = false;			scorePercent_txt.visible = false;			results_txt.visible = false;        }				public function loaded(e:Event):void {						var quizXML = new XML(e.target.data);			parseQuizXML(quizXML);						}				public function parseQuizXML(phpQuizXML:XML):void {						//define xml lists taken from our db tables questions and answers			questionTitleList = phpQuizXML.scenario.title;			questionList = phpQuizXML.scenario.q_text;			answerList = phpQuizXML.scenario.a_text;			pointList = phpQuizXML.scenario.a_points;			questionAndAnswerList = phpQuizXML.scenario;						//trace(questionTitleList);					}						public function startQuiz(e:MouseEvent):void {				//set question text based on which answers are shown			questionTitle_txt.text = questionTitleList[0];			question_txt.text = questionList[0];						//reset visibilities for invisible buttons on the stage			startQuiz_btn.visible = false;			nextQuestion_btn.visible = true;          	nextQuestion2_btn.visible = false;			nextQuestion3_btn.visible = false;			nextQuestion4_btn.visible = false;			nextQuestion5_btn.visible = false;						//create first set of answers after startbtn clicked			for(var i:int = 0; i<3; i++){				var a:Answers = new Answers(i, answerList[i], pointList[i]);				//position answers				a.x = (12 + (a.height) * (i % cols));				a.y = (12 + (a.height) * Math.floor(i/cols));				//add answers to the questionholder mc				questionHolder_mc.addChild(a);			}											}				public function nextQuestion():void {				//set different question text based on the newly loaded answers			questionTitle_txt.text = questionTitleList[3];			question_txt.text = questionList[3];						//remove the previous questions from the stage			questionHolder_mc.removeChildAt(3);			questionHolder_mc.removeChildAt(2);			questionHolder_mc.removeChildAt(1);						//reset visibilities based on which question we're on			nextQuestion_btn.visible = false;          	nextQuestion2_btn.visible = true;			nextQuestion3_btn.visible = false;			nextQuestion4_btn.visible = false;			nextQuestion5_btn.visible = false;						//create new set of answers 			for(var i:int = 0; i<6; i++){				var a:Answers = new Answers(i, answerList[i], pointList[i]);				//position new set of answers but subtract the heights of the previous ones				a.x = (12 + (a.height) * (i % cols));				a.y = (12 + ((a.height) * Math.floor(i/cols)))-(a.height*3);				//add questions to the questionholder mc				questionHolder_mc.addChild(a);				//remove the previous answers in the xml list if they don't go with this particular question				if (i<3){					questionHolder_mc.removeChild(a)				}			}					}			public function nextQuestion2():void {							questionTitle_txt.text = questionTitleList[6];			question_txt.text = questionList[6];						questionHolder_mc.removeChildAt(3);			questionHolder_mc.removeChildAt(2);			questionHolder_mc.removeChildAt(1);						nextQuestion_btn.visible = false;          	nextQuestion2_btn.visible = false;			nextQuestion3_btn.visible = true;			nextQuestion4_btn.visible = false;			nextQuestion5_btn.visible = false;						for(var i:int = 0; i<9; i++){				var a:Answers = new Answers(i, answerList[i], pointList[i]);				a.x = (12 + (a.height) * (i % cols));				a.y = (12 + ((a.height) * Math.floor(i/cols)))-(a.height*6);				//trace(i);				questionHolder_mc.addChild(a);				if (i<6){										questionHolder_mc.removeChild(a)				}			}					}				public function nextQuestion3():void {						questionTitle_txt.text = questionTitleList[9];			question_txt.text = questionList[9];						questionHolder_mc.removeChildAt(3);			questionHolder_mc.removeChildAt(2);			questionHolder_mc.removeChildAt(1);						nextQuestion_btn.visible = false;          	nextQuestion2_btn.visible = false;			nextQuestion3_btn.visible = false;			nextQuestion4_btn.visible = true;			nextQuestion5_btn.visible = false;						for(var i:int = 0; i<12; i++){				var a:Answers = new Answers(i, answerList[i], pointList[i]);				a.x = (12 + (a.height) * (i % cols));				a.y = (12 + ((a.height) * Math.floor(i/cols)))-(a.height*9);				//trace(i);				questionHolder_mc.addChild(a);				if (i<9){										questionHolder_mc.removeChild(a)				}			}					}				public function nextQuestion4():void {						questionTitle_txt.text = questionTitleList[12];			question_txt.text = questionList[12];						questionHolder_mc.removeChildAt(3);			questionHolder_mc.removeChildAt(2);			questionHolder_mc.removeChildAt(1);						nextQuestion_btn.visible = false;          	nextQuestion2_btn.visible = false;			nextQuestion3_btn.visible = false;			nextQuestion4_btn.visible = false;			nextQuestion5_btn.visible = true;						for(var i:int = 0; i<15; i++){				var a:Answers = new Answers(i, answerList[i], pointList[i]);				a.x = (12 + (a.height) * (i % cols));				a.y = (12 + ((a.height) * Math.floor(i/cols)))-(a.height*12);				//trace(i);				questionHolder_mc.addChild(a);				if (i<12){										questionHolder_mc.removeChild(a)				}			}					}					   //function that calls to our answers class        public function answerMsgHeard(e:CustomEvent):void {				   					//set point variable to how many points the answer clicked is worth			points = e.vars[1];			//set total score equal to the current score + point value of the answer selected			score = score + e.vars[1];						//if statements that go through and check visibility of next buttons on stage (that are not actually seen by the user) and call functions above based on which one is visible	   		if(nextQuestion_btn.visible == true){				trace("one down");				trace(score);				nextQuestion();							}else if(nextQuestion2_btn.visible == true){				trace("two down");				trace(score);				nextQuestion2();							}else if(nextQuestion3_btn.visible == true){				trace("three down");				trace(score);				nextQuestion3();							}else if(nextQuestion4_btn.visible == true){				trace("four down");				trace(score);				nextQuestion4();							}else if(nextQuestion5_btn.visible == true){				trace("five down FINISH QUIZ");				trace(score);				//this is the last question, once an answer for this one is selected, call score quiz function below				scoreQuiz();							}					}				public function scoreQuiz():void{						//set question text to accomodate results page			questionTitle_txt.text = "Did you make it?";			question_txt.visible = false;						//make info regarding the results visible			score_txt.visible = true;			scorePercent_txt.visible = true;			results_txt.visible = true;						//create var that turns score into an actual percentage			var scorePercent = Math.round(score / 5 * 100);			//define location for this score to load once user finishes quiz			scorePercent_txt.text = scorePercent + "%";						//trace(scorePercent);						//remove the children from the previous question			questionHolder_mc.removeChildAt(3);			questionHolder_mc.removeChildAt(2);			questionHolder_mc.removeChildAt(1);						//trace("the score is " + score);			//trace("the points for this question are " + points);						//set if statements that load different responses based on what the users score amount was			if (score == 5){				results_txt.text = "Perfect score! Jaws has nothing on you.";			}else if (score == 3){				results_txt.text = "Not TOO bad. You'll be fine if you stay close to the shore.";							}else if (score == 2){				results_txt.text = "Maybe you should brush up on your shark attack survival skills.";							}else if (score == 0){				results_txt.text = "Consider vacationing in the mountains this summer.";			}		}		    }}