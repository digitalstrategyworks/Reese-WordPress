package  Classes{		import flash.display.Sprite;	import flash.net.URLLoader;	import flash.net.URLRequest;	import flash.events.IOErrorEvent;	import flash.events.Event;	import Classes.Utilities.*;	import fl.transitions.Tween; 	import fl.transitions.easing.*;	import fl.motion.easing.*; 		public class SharkAttack extends Sprite {		//variables to load xml		public var urlLoader:URLLoader = new URLLoader();		public var url:URLRequest = new URLRequest("SharkAttack.xml");		public var xml:XML;				//variables to pullspecific data from xml		public var navList:XMLList;		public var introList:XMLList;		public var huntIdList:XMLList;		public var huntTitleList:XMLList;		public var huntInfoList:XMLList;		public var protectTList:XMLList;		public var protectCList:XMLList;		public var surTList:XMLList;		public var surCList:XMLList;				//set column # to 1 for nav btns		public var cols:int = 1;				//variable for slidepage to reference current slides		public var slidePos:int;		public var surPos:int;						public function SharkAttack() {			//listeners to load xml			urlLoader.addEventListener(Event.COMPLETE, loaded);			urlLoader.addEventListener(IOErrorEvent.IO_ERROR, error);			urlLoader.load(url);						//listener for our navbtns when clicked 			addEventListener("navMsg", navMsgHeard);						//listener for hunt pg btns			addEventListener("huntMsg", huntMsgHeard);						//listeners for next/back btns when clicked on protect slide page			addEventListener("nextMsg", nextMsgHeard);			addEventListener("backMsg", backMsgHeard);			//same thing but for survival box			addEventListener("next2Msg", next2MsgHeard);			addEventListener("back2Msg", back2MsgHeard);						//sets all but intro to invisible at start			intro_mc.visible = true;			hunt_mc.visible = false;			protect_mc.visible = false;			quiz_mc.visible = false;			discuss_mc.visible = false;			credits_mc.visible = false;						//fin mc on the stage is invisible until navbtns 1-4 are clicked			fin_mc.visible = false;											}				//function for loaded xml		public function loaded(e:Event):void{			trace("XML HAS LOADED");						xml = new XML(e.target.data);			parseXML(xml);		}				//function if xml didn't load		public function error(e:IOErrorEvent):void{			trace(e);					}				public function parseXML(allXML:XML):void{						//define variables from earlier to point out where in the xml sheet we take data from			navList = allXML.page.@nav;			introList = allXML.page.intro;						huntIdList = allXML.page.shark.@id;			huntTitleList = allXML.page.shark.@title;			huntInfoList = allXML.page.shark;						protectTList = allXML.page.protect.@title;			protectCList = allXML.page.protect;			surTList = allXML.page.survive.@title;			surCList = allXML.page.survive;						//intro text shows at start			intro_mc.intro_txt.text = introList[0];						//define function to create navigation			createNav();					}				public function createNav():void{			//trace(navList);			for(var i:int = 0; i<navList.length(); i++){				trace("WILL CREATE navigation FOR",navList[i]);				//n is an instance of navbtn class				var n:NavBtn = new NavBtn(i, navList[i]);				//position the navbuttons on stage				n.x = 25 + ((n.height) * (i % cols));				n.y = 118.5 + ((n.height) * Math.floor(i/cols));				addChild(n);							}					}						//function that tells each navbtn to do different things		public function navMsgHeard(e:CustomEvent):void{						//content title changes according to which navbtn is selected			content_txt.text = e.vars[1];						//set hunt page text			hunt_mc.huntTitle_txt.text = huntTitleList[0];			hunt_mc.huntInfo_txt.text = huntInfoList[0];						//if statements that make mcs visible and invisible depending on which is clicked			if(content_txt.text == navList[0]){					intro_mc.visible = true;					hunt_mc.visible = false;					protect_mc.visible = false;					quiz_mc.visible = false;					discuss_mc.visible = false;					credits_mc.visible = false;					fin_mc.visible = false;									}else if(content_txt.text == navList[1]){					intro_mc.visible = false;					hunt_mc.visible = true;					protect_mc.visible = false;					quiz_mc.visible = false;					discuss_mc.visible = false;					credits_mc.visible = false;										//create animations for this page					fin_mc.visible = true;					var finTween:Tween = new Tween(fin_mc, "x", Cubic.easeOut, 290, 300, 3, true);					var sharkTween:Tween = new Tween(hunt_mc.shark_mc, "x", Elastic.easeOut, 300, 25, 3, true);										//for hunt page, sets inactive states of buttons					hunt_mc.smellHear_mc.visible = false;					hunt_mc.teethJaws_mc.visible = false;					hunt_mc.speed_mc.visible = false;					hunt_mc.lateral_mc.visible = false;									}else if(content_txt.text == navList[2]){					intro_mc.visible = false;					hunt_mc.visible = false;					protect_mc.visible = true;					quiz_mc.visible = false;					discuss_mc.visible = false;					credits_mc.visible = false;										fin_mc.visible = true;					var fin2Tween:Tween = new Tween(fin_mc, "x", Cubic.easeOut, 300, 400, 6, true);										//call function in protect class					protect_mc.startLoad(protectTList[0], protectCList[0]);					protect_mc.startSurLoad(surTList[0], surCList[0]);										//backbtn is invisible when slidenav is clicked					protect_mc.back_btn.visible = false;				 	protect_mc.back2_btn.visible = false;														}else if(content_txt.text == navList[3]){					intro_mc.visible = false;					hunt_mc.visible = false;					protect_mc.visible = false;					quiz_mc.visible = true;					discuss_mc.visible = false;					credits_mc.visible = false;										fin_mc.visible = true;					var fin3Tween:Tween = new Tween(fin_mc, "x", Cubic.easeOut, 400, 500, 4, true);									}else if(content_txt.text == navList[4]){					intro_mc.visible = false;					hunt_mc.visible = false;					protect_mc.visible = false;					quiz_mc.visible = false;					discuss_mc.visible = true;					credits_mc.visible = false;														fin_mc.visible = true;					var fin4Tween:Tween = new Tween(fin_mc, "x", Cubic.easeOut, 500, 600, 3, true);									}else if(content_txt.text == navList[5]){					intro_mc.visible = false;					hunt_mc.visible = false;					protect_mc.visible = false;					quiz_mc.visible = false;					discuss_mc.visible = false;					credits_mc.visible = true;										var introTween:Tween = new Tween(credits_mc.introShark_mc, "x", Cubic.easeOut, 483, 215, 2, true);										fin_mc.visible = false;				}					}				public function huntMsgHeard(e:CustomEvent):void{						//if statements control which text shows based on which huntbutton is selected			if(e.target.name == huntIdList[1]){				hunt_mc.huntTitle_txt.text = huntTitleList[1];				hunt_mc.huntInfo_txt.text = huntInfoList[1];								hunt_mc.smellHear_mc.visible = false;				hunt_mc.teethJaws_mc.visible = true;				hunt_mc.speed_mc.visible = false;				hunt_mc.lateral_mc.visible = false;							}else if(e.target.name == huntIdList[2]){				hunt_mc.huntTitle_txt.text = huntTitleList[2];				hunt_mc.huntInfo_txt.text = huntInfoList[2];								hunt_mc.smellHear_mc.visible = false;				hunt_mc.teethJaws_mc.visible = false;				hunt_mc.speed_mc.visible = false;				hunt_mc.lateral_mc.visible = true;							}else if(e.target.name == huntIdList[3]){				hunt_mc.huntTitle_txt.text = huntTitleList[3];				hunt_mc.huntInfo_txt.text = huntInfoList[3];								hunt_mc.smellHear_mc.visible = true;				hunt_mc.teethJaws_mc.visible = false;				hunt_mc.speed_mc.visible = false;				hunt_mc.lateral_mc.visible = false;							}else if(e.target.name == huntIdList[4]){				hunt_mc.huntTitle_txt.text = huntTitleList[4];				hunt_mc.huntInfo_txt.text = huntInfoList[4];								hunt_mc.smellHear_mc.visible = false;				hunt_mc.teethJaws_mc.visible = false;				hunt_mc.speed_mc.visible = true;				hunt_mc.lateral_mc.visible = false;							}					}				//function that listens for when nextbtn in protect slide page is clicked		public function nextMsgHeard(e:CustomEvent):void{					//for loop that sets slidePos, loads different content based on slide position			for(var si:int = 0; si<protectCList.length(); si++){								//set slidepos based on info passed from hunt class				slidePos = e.vars[0];								//trace(protectTList[slidePos+1]);				protect_mc.startLoad(protectTList[slidePos], protectCList[slidePos]); 				//if statements set visibility of back and next btns based on position of slides				if (slidePos == 4){          			protect_mc.next_btn.visible = false;		 			protect_mc.back_btn.visible = true;      			} else if (slidePos == 0){           			protect_mc.next_btn.visible = true;		  			protect_mc.back_btn.visible = false;      			} else {         			protect_mc.next_btn.visible = true;					protect_mc.back_btn.visible = true;      			}							}		}				//function similar to nextMsgHeard, but defined for backBtn in slide page		public function backMsgHeard(e:CustomEvent):void{			trace("back message heard", e.vars[0]);						for(var si:int = 0; si<protectCList.length(); si++){				slidePos = e.vars[0];				//trace(slideTList[slidePos-1]);				protect_mc.startLoad(protectTList[slidePos], protectCList[slidePos]); 									if (slidePos == 4){         		 	protect_mc.next_btn.visible = false;		  			protect_mc.back_btn.visible = true;     			} else if (slidePos == 0){           			protect_mc.next_btn.visible = true;		  			protect_mc.back_btn.visible = false;      			} else {         			protect_mc.next_btn.visible = true;					protect_mc.back_btn.visible = true;      			}					}					}				public function next2MsgHeard(e:CustomEvent):void{			//trace("next message heard", e.vars[0]);			for(var sui:int = 0; sui<surCList.length(); sui++){				surPos = e.vars[0];								trace("next survival message heard", e.vars[0]);								//trace(protectTList[slidePos+1]);				protect_mc.startSurLoad(surTList[surPos], surCList[surPos]); 				//if statements set visibility of back and next btns based on position of slides				if (surPos == 4){          			protect_mc.next2_btn.visible = false;		 			protect_mc.back2_btn.visible = true;      			} else if (surPos == 0){           			protect_mc.next2_btn.visible = true;		  			protect_mc.back2_btn.visible = false;      			} else {         			protect_mc.next2_btn.visible = true;					protect_mc.back2_btn.visible = true;      			}							}		}				//function similar to nextMsgHeard, but defined for backBtn in slide page		public function back2MsgHeard(e:CustomEvent):void{			//trace("back message heard", e.vars[0]);			for(var sui:int = 0; sui<surCList.length(); sui++){								trace("back survival message heard", e.vars[0]);								surPos = e.vars[0];							protect_mc.startSurLoad(surTList[surPos], surCList[surPos]); 									if (surPos == 4){         		 	protect_mc.next2_btn.visible = false;		  			protect_mc.back2_btn.visible = true;     			} else if (surPos == 0){           			protect_mc.next2_btn.visible = true;		  			protect_mc.back2_btn.visible = false;      			} else {         			protect_mc.next2_btn.visible = true;					protect_mc.back2_btn.visible = true;      			}					}					}			}	}