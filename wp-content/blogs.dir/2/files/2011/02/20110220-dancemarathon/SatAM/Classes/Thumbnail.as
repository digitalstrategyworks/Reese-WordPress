package Classes {		import Classes.Utilities.*	import flash.display.Sprite;	import flash.display.Loader;	import flash.net.URLRequest;	import flash.events.ProgressEvent;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.display.MovieClip;	import flash.geom.ColorTransform;	import flash.display.Bitmap;		public class Thumbnail extends Sprite {						//variables to load in thumbnail image		public var req:URLRequest;		public var loader:Loader = new Loader();				//variables that store information about the main image so that we can pass them on user click		public var theTitle:String;		public var theImg:String;		public var theCaption:String;		public var thumbnailPos:uint;				//create a new preloader for each thumbnail		public var preloader:Preloader = new Preloader();				//color transform is a brightness that will overlay the images		public var darkColor:ColorTransform = new ColorTransform();		public var lightColor:ColorTransform = new ColorTransform();				public var bitmap:Bitmap;				//create the thumbnail		public function Thumbnail(fileName:String, img:String, tit:String, cap:String, pos:uint) {						//listen for a user click and if so launch image			this.addEventListener(MouseEvent.CLICK, launchImage);			this.addEventListener(MouseEvent.MOUSE_OVER, lighten);			this.addEventListener(MouseEvent.MOUSE_OUT, darken);						//sets the preloader height and width to exactly the size of the thumbnails and adds it before we load the image			//shrinking the preloader wont matter because it's only a line			preloader.width = 180;			preloader.height = 80;			this.addChild(preloader);						//set this thumbnails position so that we can reference it when the user clicks on a thumbnail and then clicks the back and next buttons			thumbnailPos = pos;						//load thumbnail and update the preloader as it loads			req = new URLRequest("Images/"+fileName);			loader.contentLoaderInfo.addEventListener(ProgressEvent.PROGRESS, updateLoad);			loader.contentLoaderInfo.addEventListener(Event.COMPLETE, thumbReady);						//button states for UI			this.buttonMode = true;			this.mouseChildren = false;						//set variables from XML so taht they can be referenced globally			theTitle = tit;			theImg = img;			theCaption = cap;						//set dark and light colors which will be used in hover state			darkColor.redOffset   = 0;			darkColor.greenOffset = 0;			darkColor.blueOffset  = 0;						lightColor.redOffset = 30;			lightColor.greenOffset = 30;			lightColor.blueOffset = 30;								//load thub			loader.load(req);		}				//change to dark color on MOUSE_OUT		private function darken(e:MouseEvent):void {			bitmap.transform.colorTransform = darkColor; 		}				//change to light color on MOUSE_OVER		private function lighten(e:MouseEvent):void {			bitmap.transform.colorTransform = lightColor; 		}				//user clicked on the thumbnail so we want to dispatch an event to the controller class ImageViewer		private function launchImage(e:MouseEvent):void {			dispatchEvent( new CustomEvent("launchImage", true, theImg, theTitle, theCaption, thumbnailPos) );		}				//update the preloader line for each thumbnail as it loads in		private function updateLoad(e:ProgressEvent):void {			var scale:Number = e.bytesLoaded/e.bytesTotal;			this.preloader.circle_mc.scaleX = scale;		}				//the thubmanil is ready, so add it to the display and send an event to the controller class so it can keep track of how many thumbnails are laoded		private function thumbReady(e:Event):void {			this.removeChild(preloader);						bitmap = e.target.content;						addChild(e.target.content);						//set the initial color of the image to be a little bit darker so that on hover we can lighten it			bitmap.transform.colorTransform = darkColor; 			dispatchEvent( new CustomEvent("thumbLoaded", true, this.width) );		}	}	}